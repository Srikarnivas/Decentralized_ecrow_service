{
  "last-round": 28,
  "txn-groups": [
    {
      "txn-results": [
        {
          "txn-result": {
            "pool-error": "",
            "txn": {
              "txn": {
                "apaa": [
                  "W3IB1Q=="
                ],
                "apid": 1026,
                "fee": 1000,
                "fv": 28,
                "gen": "dockernet-v1",
                "gh": "MIieyXkpxuoWeC4tmL/H/MCmfPteYyCfSg9YUmAUXYQ=",
                "lv": 1028,
                "snd": "ndm4Xk4JbTfpuuj9mtwVxMX1iHCl53jyQwPvOczd47Y=",
                "type": "appl"
              }
            }
          },
          "app-budget-consumed": 44,
          "exec-trace": {
            "approval-program-hash": "QJwuLYJ3PPkO0cLpuKngGhwyBe64/pv/+oj6a/FFKY8=",
            "approval-program-trace": [
              {
                "pc": 1
              },
              {
                "pc": 6
              },
              {
                "pc": 50,
                "stack-additions": [
                  {
                    "type": 2,
                    "uint": 1026
                  }
                ]
              },
              {
                "pc": 52,
                "stack-additions": [
                  {
                    "type": 2
                  }
                ],
                "stack-pop-count": 1
              },
              {
                "pc": 53,
                "stack-additions": [
                  {
                    "type": 2,
                    "uint": 6
                  }
                ]
              },
              {
                "pc": 55,
                "stack-additions": [
                  {
                    "type": 2
                  }
                ],
                "stack-pop-count": 2
              },
              {
                "pc": 56,
                "stack-additions": [
                  {
                    "type": 2
                  }
                ]
              },
              {
                "pc": 58,
                "stack-additions": [
                  {
                    "type": 2
                  }
                ],
                "stack-pop-count": 2
              },
              {
                "pc": 59,
                "stack-pop-count": 1
              },
              {
                "pc": 354,
                "stack-additions": [
                  {
                    "type": 1,
                    "bytes": "qDxzzg=="
                  }
                ]
              },
              {
                "pc": 360,
                "stack-additions": [
                  {
                    "type": 1,
                    "bytes": "rR9tJA=="
                  }
                ]
              },
              {
                "pc": 366,
                "stack-additions": [
                  {
                    "type": 1,
                    "bytes": "W3IB1Q=="
                  }
                ]
              },
              {
                "pc": 372,
                "stack-additions": [
                  {
                    "type": 1,
                    "bytes": "585OIg=="
                  }
                ]
              },
              {
                "pc": 378,
                "stack-additions": [
                  {
                    "type": 1,
                    "bytes": "W3IB1Q=="
                  }
                ]
              },
              {
                "pc": 381,
                "stack-pop-count": 5
              },
              {
                "pc": 227
              },
              {
                "pc": 232
              },
              {
                "pc": 235,
                "stack-additions": [
                  {
                    "type": 1,
                    "bytes": "ndm4Xk4JbTfpuuj9mtwVxMX1iHCl53jyQwPvOczd47Y="
                  }
                ]
              },
              {
                "pc": 237,
                "stack-additions": [
                  {
                    "type": 2,
                    "uint": 1026
                  }
                ]
              },
              {
                "pc": 240,
                "stack-additions": [
                  {
                    "type": 1,
                    "bytes": "ndm4Xk4JbTfpuuj9mtwVxMX1iHCl53jyQwPvOczd47Y="
                  },
                  {
                    "type": 2,
                    "uint": 1
                  }
                ],
                "stack-pop-count": 1
              },
              {
                "pc": 242,
                "stack-pop-count": 1
              },
              {
                "pc": 243,
                "stack-additions": [
                  {
                    "type": 2,
                    "uint": 1
                  }
                ],
                "stack-pop-count": 2
              },
              {
                "pc": 244,
                "stack-additions": [
                  {
                    "type": 2,
                    "uint": 1
                  },
                  {
                    "type": 2,
                    "uint": 1
                  }
                ],
                "stack-pop-count": 1
              },
              {
                "pc": 245,
                "stack-pop-count": 1
              },
              {
                "pc": 254,
                "stack-additions": [
                  {
                    "type": 2,
                    "uint": 1
                  },
                  {
                    "type": 2,
                    "uint": 1
                  }
                ],
                "stack-pop-count": 1
              },
              {
                "pc": 255,
                "stack-pop-count": 1
              },
              {
                "pc": 264,
                "stack-pop-count": 1
              },
              {
                "pc": 265,
                "stack-additions": [
                  {
                    "type": 1,
                    "bytes": "Y29uZGl0aW9uTWV0"
                  }
                ]
              },
              {
                "pc": 266,
                "stack-additions": [
                  {
                    "type": 1,
                    "bytes": "gA=="
                  }
                ],
                "stack-pop-count": 1
              },
              {
                "pc": 267,
                "stack-additions": [
                  {
                    "type": 2
                  }
                ]
              },
              {
                "pc": 268,
                "stack-additions": [
                  {
                    "type": 2,
                    "uint": 1
                  }
                ],
                "stack-pop-count": 2
              },
              {
                "pc": 269,
                "stack-pop-count": 1
              },
              {
                "pc": 270
              },
              {
                "pc": 271,
                "stack-additions": [
                  {
                    "type": 2,
                    "uint": 1
                  }
                ]
              },
              {
                "pc": 272,
                "stack-pop-count": 1
              },
              {
                "pc": 274,
                "stack-additions": [
                  {
                    "type": 1,
                    "bytes": "d29ya2Vy"
                  }
                ]
              },
              {
                "pc": 275,
                "stack-additions": [
                  {
                    "type": 1,
                    "bytes": "ndm4Xk4JbTfpuuj9mtwVxMX1iHCl53jyQwPvOczd47Y="
                  }
                ],
                "stack-pop-count": 1
              },
              {
                "pc": 276,
                "stack-pop-count": 1
              },
              {
                "pc": 278,
                "stack-additions": [
                  {
                    "type": 1,
                    "bytes": "cGF5bWVudEFtb3VudA=="
                  }
                ]
              },
              {
                "pc": 279,
                "stack-additions": [
                  {
                    "type": 2,
                    "uint": 3000000
                  }
                ],
                "stack-pop-count": 1
              },
              {
                "pc": 280,
                "stack-pop-count": 1
              },
              {
                "pc": 282,
                "stack-additions": [
                  {
                    "type": 2
                  }
                ]
              },
              {
                "pc": 283,
                "stack-pop-count": 1
              },
              {
                "pc": 285
              }
            ]
          }
        }
      ],
      "app-budget-added": 700,
      "app-budget-consumed": 44,
      "failed-at": [
        0
      ],
      "failure-message": "transaction LEA4FYDGZ6ERSU3QLZU56SFHFNURMQVWUNT7Q57D7OJPWT5GTLIQ: logic eval error: fee too small []transactions.SignedTxnWithAD{transactions.SignedTxnWithAD{_struct:struct {}{}, SignedTxn:transactions.SignedTxn{_struct:struct {}{}, Sig:crypto.Signature{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, Msig:crypto.MultisigSig{_struct:struct {}{}, Version:0x0, Threshold:0x0, Subsigs:[]crypto.MultisigSubsig(nil)}, Lsig:transactions.LogicSig{_struct:struct {}{}, Logic:[]uint8(nil), Sig:crypto.Signature{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, Msig:crypto.MultisigSig{_struct:struct {}{}, Version:0x0, Threshold:0x0, Subsigs:[]crypto.MultisigSubsig(nil)}, Args:[][]uint8(nil)}, Txn:transactions.Transaction{_struct:struct {}{}, Type:\"pay\", Header:transactions.Header{_struct:struct {}{}, Sender:basics.Address{0xd8, 0x99, 0x97, 0xc2, 0xbb, 0x3a, 0x95, 0x8b, 0x6e, 0x6d, 0xe, 0x51, 0xc5, 0x0, 0x41, 0x64, 0x7, 0xa, 0x35, 0xd8, 0x95, 0xc6, 0x7b, 0x1c, 0xae, 0x6f, 0xd0, 0x49, 0x90, 0x86, 0xff, 0xba}, Fee:basics.MicroAlgos{Raw:0x0}, FirstValid:0x1c, LastValid:0x404, Note:[]uint8(nil), GenesisID:\"\", GenesisHash:crypto.Digest{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, Group:crypto.Digest{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, Lease:[32]uint8{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, RekeyTo:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}, KeyregTxnFields:transactions.KeyregTxnFields{_struct:struct {}{}, VotePK:crypto.OneTimeSignatureVerifier{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, SelectionPK:crypto.VrfPubkey{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, StateProofPK:merklesignature.Commitment{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, VoteFirst:0x0, VoteLast:0x0, VoteKeyDilution:0x0, Nonparticipation:false}, PaymentTxnFields:transactions.PaymentTxnFields{_struct:struct {}{}, Receiver:basics.Address{0x9d, 0xd9, 0xb8, 0x5e, 0x4e, 0x9, 0x6d, 0x37, 0xe9, 0xba, 0xe8, 0xfd, 0x9a, 0xdc, 0x15, 0xc4, 0xc5, 0xf5, 0x88, 0x70, 0xa5, 0xe7, 0x78, 0xf2, 0x43, 0x3, 0xef, 0x39, 0xcc, 0xdd, 0xe3, 0xb6}, Amount:basics.MicroAlgos{Raw:0x2dc6c0}, CloseRemainderTo:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}, AssetConfigTxnFields:transactions.AssetConfigTxnFields{_struct:struct {}{}, ConfigAsset:0x0, AssetParams:basics.AssetParams{_struct:struct {}{}, Total:0x0, Decimals:0x0, DefaultFrozen:false, UnitName:\"\", AssetName:\"\", URL:\"\", MetadataHash:[32]uint8{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, Manager:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, Reserve:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, Freeze:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, Clawback:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}}, AssetTransferTxnFields:transactions.AssetTransferTxnFields{_struct:struct {}{}, XferAsset:0x0, AssetAmount:0x0, AssetSender:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, AssetReceiver:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, AssetCloseTo:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}, AssetFreezeTxnFields:transactions.AssetFreezeTxnFields{_struct:struct {}{}, FreezeAccount:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, FreezeAsset:0x0, AssetFrozen:false}, ApplicationCallTxnFields:transactions.ApplicationCallTxnFields{_struct:struct {}{}, ApplicationID:0x0, OnCompletion:0x0, ApplicationArgs:[][]uint8(nil), Accounts:[]basics.Address(nil), ForeignApps:[]basics.AppIndex(nil), Boxes:[]transactions.BoxRef(nil), ForeignAssets:[]basics.AssetIndex(nil), LocalStateSchema:basics.StateSchema{_struct:struct {}{}, NumUint:0x0, NumByteSlice:0x0}, GlobalStateSchema:basics.StateSchema{_struct:struct {}{}, NumUint:0x0, NumByteSlice:0x0}, ApprovalProgram:[]uint8(nil), ClearStateProgram:[]uint8(nil), ExtraProgramPages:0x0}, StateProofTxnFields:transactions.StateProofTxnFields{_struct:struct {}{}, StateProofType:0x0, StateProof:stateproof.StateProof{_struct:struct {}{}, SigCommit:crypto.GenericDigest(nil), SignedWeight:0x0, SigProofs:merklearray.Proof{_struct:struct {}{}, Path:[]crypto.GenericDigest(nil), HashFactory:crypto.HashFactory{_struct:struct {}{}, HashType:0x0}, TreeDepth:0x0}, PartProofs:merklearray.Proof{_struct:struct {}{}, Path:[]crypto.GenericDigest(nil), HashFactory:crypto.HashFactory{_struct:struct {}{}, HashType:0x0}, TreeDepth:0x0}, MerkleSignatureSaltVersion:0x0, Reveals:map[uint64]stateproof.Reveal(nil), PositionsToReveal:[]uint64(nil)}, Message:stateproofmsg.Message{_struct:struct {}{}, BlockHeadersCommitment:[]uint8(nil), VotersCommitment:[]uint8(nil), LnProvenWeight:0x0, FirstAttestedRound:0x0, LastAttestedRound:0x0}}}, AuthAddr:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}, ApplyData:transactions.ApplyData{_struct:struct {}{}, ClosingAmount:basics.MicroAlgos{Raw:0x0}, AssetClosingAmount:0x0, SenderRewards:basics.MicroAlgos{Raw:0x0}, ReceiverRewards:basics.MicroAlgos{Raw:0x0}, CloseRewards:basics.MicroAlgos{Raw:0x0}, EvalDelta:transactions.EvalDelta{_struct:struct {}{}, GlobalDelta:basics.StateDelta(nil), LocalDeltas:map[uint64]basics.StateDelta(nil), SharedAccts:[]basics.Address(nil), Logs:[]string(nil), InnerTxns:[]transactions.SignedTxnWithAD(nil)}, ConfigAsset:0x0, ApplicationID:0x0}}}. Details: app=1026, pc=285, opcodes=intc_1 // 0; itxn_field Fee; itxn_submit"
    }
  ],
  "version": 2,
  "eval-overrides": {
    "allow-empty-signatures": true,
    "max-log-calls": 2048,
    "max-log-size": 65536
  },
  "exec-trace-config": {
    "enable": true,
    "scratch-change": true,
    "stack-change": true,
    "state-change": true
  },
  "initial-states": {
    "app-initial-states": [
      {
        "id": 1026,
        "app-globals": {
          "kvs": [
            {
              "key": "Y29uZGl0aW9uTWV0",
              "value": {
                "type": 1,
                "bytes": "gA=="
              }
            },
            {
              "key": "d29ya2Vy",
              "value": {
                "type": 1,
                "bytes": "ndm4Xk4JbTfpuuj9mtwVxMX1iHCl53jyQwPvOczd47Y="
              }
            },
            {
              "key": "cGF5bWVudEFtb3VudA==",
              "value": {
                "type": 2,
                "uint": 3000000
              }
            }
          ]
        }
      }
    ]
  }
}
{
  "hints": {
    "createApplication(address,address)void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "setConditionMet()bool": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "addFundsToEscrow(pay)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "releaseFunds()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "deleteEscrow()void": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "paymentAmount": {
          "type": "uint64",
          "key": "paymentAmount"
        },
        "worker": {
          "type": "bytes",
          "key": "worker"
        },
        "conditionMet": {
          "type": "bytes",
          "key": "conditionMet"
        },
        "admin": {
          "type": "bytes",
          "key": "admin"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 3,
      "num_uints": 1
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "EscrowService",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "desc": "Initialize the escrow contract",
        "args": [
          {
            "name": "worker",
            "type": "address",
            "desc": "The worker who will receive the asset if the condition is met"
          },
          {
            "name": "adminAddress",
            "type": "address",
            "desc": "The address of the adminfunds"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "setConditionMet",
        "desc": "Sets the condition to true, allowing funds release, and sends a message to the worker\nThis can be called by the boss upon confirmation that work is done or the asset has been delivered.\n\n\nThe address of the worker to confirm identity and send a message",
        "args": [],
        "returns": {
          "type": "bool"
        }
      },
      {
        "name": "addFundsToEscrow",
        "args": [
          {
            "name": "ebaTxn",
            "type": "pay",
            "desc": "The paymentAmount transaction that adds the paymentamount to the escrow"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "releaseFunds",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "deleteEscrow",
        "desc": "Method to cancel the escrow and delete the application\nReturns any remaining funds or assets to the boss",
        "args": [],
        "returns": {
          "type": "void"
        }
      }
    ]
  }
}